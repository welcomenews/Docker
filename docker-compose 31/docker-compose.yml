version: '3'

services:

    voting:
      build: .
      environment:
         - DB_HOST=${DB_HOST}
         - DB_NAME=${DB_DATABASE}
         - DB_USERNAME=${DB_USERNAME}
         - DB_PASSWORD=${DB_PASSWORD}
      volumes:
         - ./database.php:/var/www/html/config/database.php
      links:
         - fluentd
      logging:
         driver: "fluentd"
         options:
           fluentd-address: localhost:24224
           tag: "docker.{{.ID}}"
      depends_on:
         - mysql
         - fluentd
           
    mysql:
      image: wangxian/alpine-mysql
      restart: unless-stopped
      environment:
         - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
         - MYSQL_ALLOW_EMPTY_PASSWORD="yes"
         - MYSQL_DATABASE=${DB_DATABASE}
         - MYSQL_USER=${DB_USERNAME}
         - MYSQL_PASSWORD=${DB_PASSWORD}
           #      healthcheck:
           #         test: ["CMD", "curl", "-f", "http://localhost"]
              #         interval: 30s
              #         retries: 5
              #         start_period: 30s
      volumes:
         - ./db-data:/var/lib/mysql
      links:
         - fluentd
      logging:
         driver: "fluentd"
         options:
           fluentd-address: localhost:24224
           tag: "docker.{{.ID}}"
      expose:
         - "3306"

    redis:
      image: redis:alpine
      environment:
         - REDIS_HOST=${REDIS_HOST}
         - REDIS_PASSWORD=""
      command: ["sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\""]

    nginx:
      image: nginx:alpine
      ports:
         - "20000:80"
      links:
         - fluentd
      logging:
         driver: "fluentd"
         options:
           fluentd-address: localhost:24224
           tag: nginx.access 
      volumes:
         - ./default.conf:/etc/nginx/conf.d/default.conf

    fluentd:
      build: ./fluentd
      volumes:
         - ./fluentd/conf/fluent.conf:/fluentd/etc/fluent.conf 
      links:
         - "elasticsearch"
      ports:
         - "24224:24224"
         - "24224:24224/udp"

    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1   
      environment:
         - "discovery.type=single-node"
      expose:
         - 9200
      ports:
         - "9200:9200"

    kibana:
      image: docker.elastic.co/kibana/kibana:7.13.1
      links:
         - "elasticsearch"
      ports:
         - "5601:5601"

volumes:
    db-data:
